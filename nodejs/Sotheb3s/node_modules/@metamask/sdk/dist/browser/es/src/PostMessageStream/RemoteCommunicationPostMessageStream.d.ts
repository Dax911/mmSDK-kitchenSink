/// <reference types="node" />
/// <reference types="node" />
import { Duplex } from 'stream';
import { CommunicationLayerMessage, RemoteCommunication } from '@metamask/sdk-communication-layer';
import { ProviderConstants } from '../constants';
import { PlatformManager } from '../Platform/PlatfformManager';
import { PostMessageStream } from './PostMessageStream';
export declare class RemoteCommunicationPostMessageStream extends Duplex implements PostMessageStream {
    private _name;
    private remote;
    private platformManager;
    private debug;
    constructor({ name, remote, platformManager, debug, }: {
        name: ProviderConstants;
        remote: RemoteCommunication;
        platformManager: PlatformManager;
        debug: boolean;
    });
    /**
     * Called when querying the sdk provider with ethereum.request
     */
    _write(chunk: any, _encoding: BufferEncoding, callback: (error?: Error | null) => void): Promise<void>;
    _read(): undefined;
    _onMessage(message: CommunicationLayerMessage): void;
    start(): void;
}
//# sourceMappingURL=RemoteCommunicationPostMessageStream.d.ts.map